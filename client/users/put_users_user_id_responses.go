// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"go-swagger/models"
)

// PutUsersUserIDReader is a Reader for the PutUsersUserID structure.
type PutUsersUserIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUsersUserIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutUsersUserIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutUsersUserIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPutUsersUserIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutUsersUserIDOK creates a PutUsersUserIDOK with default headers values
func NewPutUsersUserIDOK() *PutUsersUserIDOK {
	return &PutUsersUserIDOK{}
}

/*
PutUsersUserIDOK describes a response with status code 200, with default header values.

OK
*/
type PutUsersUserIDOK struct {
	Payload *models.MainUser
}

// IsSuccess returns true when this put users user Id o k response has a 2xx status code
func (o *PutUsersUserIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put users user Id o k response has a 3xx status code
func (o *PutUsersUserIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put users user Id o k response has a 4xx status code
func (o *PutUsersUserIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put users user Id o k response has a 5xx status code
func (o *PutUsersUserIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put users user Id o k response a status code equal to that given
func (o *PutUsersUserIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutUsersUserIDOK) Error() string {
	return fmt.Sprintf("[PUT /users/{user_id}][%d] putUsersUserIdOK  %+v", 200, o.Payload)
}

func (o *PutUsersUserIDOK) String() string {
	return fmt.Sprintf("[PUT /users/{user_id}][%d] putUsersUserIdOK  %+v", 200, o.Payload)
}

func (o *PutUsersUserIDOK) GetPayload() *models.MainUser {
	return o.Payload
}

func (o *PutUsersUserIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MainUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUsersUserIDBadRequest creates a PutUsersUserIDBadRequest with default headers values
func NewPutUsersUserIDBadRequest() *PutUsersUserIDBadRequest {
	return &PutUsersUserIDBadRequest{}
}

/*
PutUsersUserIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutUsersUserIDBadRequest struct {
	Payload *models.MainErrorResponse
}

// IsSuccess returns true when this put users user Id bad request response has a 2xx status code
func (o *PutUsersUserIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put users user Id bad request response has a 3xx status code
func (o *PutUsersUserIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put users user Id bad request response has a 4xx status code
func (o *PutUsersUserIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put users user Id bad request response has a 5xx status code
func (o *PutUsersUserIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put users user Id bad request response a status code equal to that given
func (o *PutUsersUserIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutUsersUserIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /users/{user_id}][%d] putUsersUserIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutUsersUserIDBadRequest) String() string {
	return fmt.Sprintf("[PUT /users/{user_id}][%d] putUsersUserIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutUsersUserIDBadRequest) GetPayload() *models.MainErrorResponse {
	return o.Payload
}

func (o *PutUsersUserIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MainErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUsersUserIDUnprocessableEntity creates a PutUsersUserIDUnprocessableEntity with default headers values
func NewPutUsersUserIDUnprocessableEntity() *PutUsersUserIDUnprocessableEntity {
	return &PutUsersUserIDUnprocessableEntity{}
}

/*
PutUsersUserIDUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type PutUsersUserIDUnprocessableEntity struct {
	Payload *models.MainErrorResponse
}

// IsSuccess returns true when this put users user Id unprocessable entity response has a 2xx status code
func (o *PutUsersUserIDUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put users user Id unprocessable entity response has a 3xx status code
func (o *PutUsersUserIDUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put users user Id unprocessable entity response has a 4xx status code
func (o *PutUsersUserIDUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this put users user Id unprocessable entity response has a 5xx status code
func (o *PutUsersUserIDUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this put users user Id unprocessable entity response a status code equal to that given
func (o *PutUsersUserIDUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *PutUsersUserIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /users/{user_id}][%d] putUsersUserIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PutUsersUserIDUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /users/{user_id}][%d] putUsersUserIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PutUsersUserIDUnprocessableEntity) GetPayload() *models.MainErrorResponse {
	return o.Payload
}

func (o *PutUsersUserIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MainErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
