// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"go-swagger/models"
)

// GetUsersUserIDReader is a Reader for the GetUsersUserID structure.
type GetUsersUserIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersUserIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsersUserIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUsersUserIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUsersUserIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetUsersUserIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUsersUserIDOK creates a GetUsersUserIDOK with default headers values
func NewGetUsersUserIDOK() *GetUsersUserIDOK {
	return &GetUsersUserIDOK{}
}

/*
GetUsersUserIDOK describes a response with status code 200, with default header values.

OK
*/
type GetUsersUserIDOK struct {
	Payload *models.MainUser
}

// IsSuccess returns true when this get users user Id o k response has a 2xx status code
func (o *GetUsersUserIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get users user Id o k response has a 3xx status code
func (o *GetUsersUserIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users user Id o k response has a 4xx status code
func (o *GetUsersUserIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users user Id o k response has a 5xx status code
func (o *GetUsersUserIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get users user Id o k response a status code equal to that given
func (o *GetUsersUserIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUsersUserIDOK) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}][%d] getUsersUserIdOK  %+v", 200, o.Payload)
}

func (o *GetUsersUserIDOK) String() string {
	return fmt.Sprintf("[GET /users/{user_id}][%d] getUsersUserIdOK  %+v", 200, o.Payload)
}

func (o *GetUsersUserIDOK) GetPayload() *models.MainUser {
	return o.Payload
}

func (o *GetUsersUserIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MainUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersUserIDBadRequest creates a GetUsersUserIDBadRequest with default headers values
func NewGetUsersUserIDBadRequest() *GetUsersUserIDBadRequest {
	return &GetUsersUserIDBadRequest{}
}

/*
GetUsersUserIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetUsersUserIDBadRequest struct {
	Payload *models.MainErrorResponse
}

// IsSuccess returns true when this get users user Id bad request response has a 2xx status code
func (o *GetUsersUserIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users user Id bad request response has a 3xx status code
func (o *GetUsersUserIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users user Id bad request response has a 4xx status code
func (o *GetUsersUserIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users user Id bad request response has a 5xx status code
func (o *GetUsersUserIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get users user Id bad request response a status code equal to that given
func (o *GetUsersUserIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetUsersUserIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}][%d] getUsersUserIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetUsersUserIDBadRequest) String() string {
	return fmt.Sprintf("[GET /users/{user_id}][%d] getUsersUserIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetUsersUserIDBadRequest) GetPayload() *models.MainErrorResponse {
	return o.Payload
}

func (o *GetUsersUserIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MainErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersUserIDNotFound creates a GetUsersUserIDNotFound with default headers values
func NewGetUsersUserIDNotFound() *GetUsersUserIDNotFound {
	return &GetUsersUserIDNotFound{}
}

/*
GetUsersUserIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetUsersUserIDNotFound struct {
	Payload *models.MainErrorResponse
}

// IsSuccess returns true when this get users user Id not found response has a 2xx status code
func (o *GetUsersUserIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users user Id not found response has a 3xx status code
func (o *GetUsersUserIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users user Id not found response has a 4xx status code
func (o *GetUsersUserIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users user Id not found response has a 5xx status code
func (o *GetUsersUserIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get users user Id not found response a status code equal to that given
func (o *GetUsersUserIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUsersUserIDNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}][%d] getUsersUserIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUsersUserIDNotFound) String() string {
	return fmt.Sprintf("[GET /users/{user_id}][%d] getUsersUserIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUsersUserIDNotFound) GetPayload() *models.MainErrorResponse {
	return o.Payload
}

func (o *GetUsersUserIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MainErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersUserIDUnprocessableEntity creates a GetUsersUserIDUnprocessableEntity with default headers values
func NewGetUsersUserIDUnprocessableEntity() *GetUsersUserIDUnprocessableEntity {
	return &GetUsersUserIDUnprocessableEntity{}
}

/*
GetUsersUserIDUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetUsersUserIDUnprocessableEntity struct {
	Payload *models.MainErrorResponse
}

// IsSuccess returns true when this get users user Id unprocessable entity response has a 2xx status code
func (o *GetUsersUserIDUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users user Id unprocessable entity response has a 3xx status code
func (o *GetUsersUserIDUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users user Id unprocessable entity response has a 4xx status code
func (o *GetUsersUserIDUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users user Id unprocessable entity response has a 5xx status code
func (o *GetUsersUserIDUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get users user Id unprocessable entity response a status code equal to that given
func (o *GetUsersUserIDUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *GetUsersUserIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}][%d] getUsersUserIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetUsersUserIDUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /users/{user_id}][%d] getUsersUserIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetUsersUserIDUnprocessableEntity) GetPayload() *models.MainErrorResponse {
	return o.Payload
}

func (o *GetUsersUserIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MainErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
