basePath: /
definitions:
  main.CreateUserRequest:
    properties:
      age:
        example: 20
        type: integer
      name:
        example: test
        type: string
    type: object
  main.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  main.UpdateUserRequest:
    properties:
      age:
        example: 21
        type: integer
      name:
        example: test-name
        type: string
    type: object
  main.User:
    properties:
      age:
        example: 20
        type: integer
      id:
        example: 1
        type: integer
      name:
        example: test
        type: string
    type: object
  main.UsersResponse:
    properties:
      users: {}
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API supporter
    url: http://www.swagger.io/support
  description: API Document practice
  license:
    name: license
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: Document content
  title: Golang Swagger API Document
  version: version1.0
paths:
  /users:
    get:
      consumes:
      - application/json
      description: return users
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: age
        in: query
        name: age
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.UsersResponse'
            - properties:
                users:
                  items:
                    $ref: '#/definitions/main.User'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: return users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: create user
      tags:
      - users
  /users/{user_id}:
    delete:
      consumes:
      - application/json
      description: delete user by user_id
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: delete user by user_id
      tags:
      - users
    get:
      consumes:
      - application/json
      description: return user by user_id
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: return user by user_id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: update user
      tags:
      - users
swagger: "2.0"
